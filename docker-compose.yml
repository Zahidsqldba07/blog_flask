version: '3.9'
services:
    db:
        image: postgres:14.4
        restart: always
        environment:
            - POSTGRES_USER
            - POSTGRES_PASSWORD
            - POSTGRES_DB
        volumes:
            - ./db/docker-entrypoint-initdb.d/create-tables.sql:/docker-entrypoint-initdb.d/create-tables.sql
        logging:
            options:
                max-size: 10m
                max-file: 3
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
            interval: 5s
            timeout: 10s
            retries: 5
            start_period: 30s
        networks:
            - back_tier
    app:
        image: tiangolo/uwsgi-nginx-flask:python3.8-alpine
        build: /var/www
        environment:
            - FLASK_RUN_HOST
            - FLASK_RUN_PORT
            - STATIC_URL
            - STATIC_PATH
        ports:
            - "${FLASK_RUN_PORT}:${FLASK_RUN_PORT}"
        healthcheck:
            test: ["CMD-SHELL", "curl --fail -s http:/${FLASK_RUN_HOST}:${FLASK_RUN_PORT}/ || exit 1"]
            interval: 5s
            timeout: 10s
            retries: 5
            start_period: 30s
        depends_on:
            db:
                condition: service_healthy
        networks:
            - back_tier
    client:
        image: node:18.4.0
        build: /client
        environment:
            - REACT_PORT
        ports:
            - "${REACT_PORT}:${REACT_PORT}"
        depends_on:
            db:
                condition: service_healthy
            app:
                condition: service_started
        networks:
            - front_tier
volumes:
    db:
        driver: "local"
networks:
    front-tier:
    back_tier: