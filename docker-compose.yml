version: "3.8"
services:
    db:
        image: postgres:14.4
        restart: always
        env_file:
            - .env
        ports:
            - "${POSTGRES_PORT}:5432"
        volumes:
            - ./db/docker-entrypoint-initdb.d/create-tables.sql:/docker-entrypoint-initdb.d/create-tables.sql
        logging:
            options:
                max-size: 10m
                max-file: 3
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
            interval: 5s
            timeout: 10s
            retries: 5
            start_period: 30s
        networks:
            - back_tier
    app:
        image: python:3.11-rc-buster
        build:
            context: ./app
            dockerfile: Dockerfile
        env_file:
            - .env
        ports:
            - ${FLASK_RUN_PORT}:5000
        healthcheck:
            test: ["CMD-SHELL", "curl --fail -s http:/${FLASK_RUN_HOST}:${FLASK_RUN_PORT}/ || exit 1"]
            interval: 5s
            timeout: 10s
            retries: 5
            start_period: 30s
        depends_on:
            db:
                condition: service_healthy
        networks:
            - back_tier
            - front_tier
    client:
        image: node:18.4.0
        build:
            context: ./client
            dockerfile: Dockerfile
        env_file:
            - .env
        ports:
            - ${REACT_PORT}:3000
        depends_on:
            db:
                condition: service_healthy
            app:
                condition: service_started
        networks:
            - front_tier
            - back_tier
volumes:
    db:
        driver: "local"
networks:
    front_tier:
    back_tier: